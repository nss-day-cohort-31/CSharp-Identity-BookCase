@model BookCase.Models.ViewModels.AuthorDeleteViewModel

@{
    ViewData["Title"] = "Delete";
}

<h1>Delete</h1>

@* NOTE: We conditionally render based on the CanDelete flag*@
@if  (Model.CanDelete)
{
    <h3>Are you sure you want to delete this?</h3>
}
else
{
    <h3>Sorry, you cannot delete this author because they are associated with books in the system.</h3>
}
<div>
    <h4>Author</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Author.FirstName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Author.FirstName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Author.LastName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Author.LastName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Author.PenName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Author.PenName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Author.Genre)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Author.Genre)
        </dd>
    </dl>
    
    @* NOTE: We conditionally render based on the CanDelete flag*@
    @if (Model.CanDelete)
    {
        <form asp-action="Delete">
            <input type="hidden" asp-for="Author.Id" />
            <input type="submit" value="Delete" class="btn btn-danger" /> |
            <a asp-action="Index">Back to List</a>
        </form>
    }
    else
    {
        <a asp-action="Index">Back to List</a>
    }
</div>
